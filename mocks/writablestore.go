// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpack/pack (interfaces: WritableStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/google/go-containerregistry/pkg/v1"
	reflect "reflect"
)

// MockWritableStore is a mock of WritableStore interface
type MockWritableStore struct {
	ctrl     *gomock.Controller
	recorder *MockWritableStoreMockRecorder
}

// MockWritableStoreMockRecorder is the mock recorder for MockWritableStore
type MockWritableStoreMockRecorder struct {
	mock *MockWritableStore
}

// NewMockWritableStore creates a new mock instance
func NewMockWritableStore(ctrl *gomock.Controller) *MockWritableStore {
	mock := &MockWritableStore{ctrl: ctrl}
	mock.recorder = &MockWritableStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWritableStore) EXPECT() *MockWritableStoreMockRecorder {
	return m.recorder
}

// Write mocks base method
func (m *MockWritableStore) Write(arg0 v1.Image) error {
	ret := m.ctrl.Call(m, "Write", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write
func (mr *MockWritableStoreMockRecorder) Write(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockWritableStore)(nil).Write), arg0)
}
